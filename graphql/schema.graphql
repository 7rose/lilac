scalar DateTime @scalar(class: "Nuwave\\Lighthouse\\Schema\\Types\\Scalars\\DateTime")
# scalar Upload @scalar(class: "Nuwave\\Lighthouse\\Schema\\Types\\Scalars\\Upload")
scalar Json 
# scalar Email @scalar(class: "MLL\\GraphQLScalars\\Email")
scalar ChineseMobile
scalar SmsCode

type Query {
    # users: [User!]! @paginate
    user(id: ID @eq): User @find
    # orgs: [Org!]! @all
    # org(id: ID @eq): Org @find
    # discoveries: [Discovery!]! @all

    videos(show: Boolean @scope(name: "show")): [Video!]! @paginate # 视频
    video(id: ID @eq, show: Boolean @scope(name: "show")): Video @find
}

# 需要认证
extend type Query @guard {
    me: User @auth # 个人信息
}

type Mutation {
    trustMoblie(input: trustMoblieInput! @spread) : TokenPayload!
    sendSmsCode(input: SendSmsCodeInput! @spread) : SendSmsResault!
    getToken(input: GetTokenInput! @spread) : TokenPayload!
    logout: LogoutResault!
}

extend type Mutation @guard {
    star(input: StarInput! @spread) : StarPayload! # 赞和取消赞
    newComment(input: CommentInput! @spread) : Comment! # 评价
    deleteComment(id: ID!): Comment @delete
}

#import user.graphql
#import org.graphql
#import role.graphql
#import auth.graphql

#import video.graphql
#import star.graphql
#import comment.graphql
#import score.graphql
